Диофантово уравнение

Задача 66
Рассмотрим квадратные диофантовы уравнения вида:

х 2 - Д у 2 = 1

Например, когда D = 13, минимальное решение по x равно 649 2 - 13 × 180 2 = 1.

Можно предположить, что нет решений в натуральных числах, когда D - квадрат.

Найдя минимальные решения по x для D = {2, 3, 5, 6, 7}, получаем следующее:

3 2 - 2 × 2 2 = 1
2 2 - 3 × 1 2 = 1
9 2 - 5 × 4 2 = 1
5 2 - 6 × 2 2 = 1
8 2 - 7 × 3 2 = 1

Следовательно, рассматривая минимальные решения в x для D ≤ 7, самый большой x получается, когда D = 5.

Найти значение D ≤ 1000 в минимальных решениях x, для которых получено наибольшее значение x .
M = 1000

maxx = 0
ss = 0
for i in range(1, 31):
    nn = i*i
    for j in range(1, 2*i+1):
        n = nn + j
        if n > M: break
        p, q = i, j
        expan = [i]
        while True:
            r, s = 1, 0
            for k in expan:
                r, s = k*r+s, r
            if r*r - n*s*s == 1:
                if r > maxx:
                    ss = n
                    maxx = r
                break
            s = i + p
            k, p = s//q, s%q-i
            expan.insert(0, k)
            m = n - p*p
            assert m % q == 0
            p, q = -p, m//q
print(ss)
